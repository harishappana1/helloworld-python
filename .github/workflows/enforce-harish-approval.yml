on:
  pull_request_target:    # keep this if you must re-read the secret on forks
    types: []             # ← remove all PR-open/update triggers
  pull_request_review:
    types: [submitted]

jobs:
  require-harish-approval:
    runs-on: ubuntu-latest
    env:
      # the one user you require:
      APPROVER_LOGIN: harishappana7

      # standard GitHub context
      GITHUB_TOKEN:    ${{ secrets.CINEWTOKEN }}
      GITHUB_EVENT_PATH: ${{ github.event_path }}
      GITHUB_REPOSITORY: ${{ github.repository }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install PyGithub
        run: python -m pip install --upgrade pip PyGithub

      - name: Validate approval by only ${{ env.APPROVER_LOGIN }}
        run: |
          python - << 'PYCODE'
          import os, json, sys
          from github import Github

          ev    = json.load(open(os.environ["GITHUB_EVENT_PATH"]))
          pr_no = ev["pull_request"]["number"]
          repo  = os.environ["GITHUB_REPOSITORY"]
          want  = os.environ["APPROVER_LOGIN"].lower()

          gh    = Github(os.environ["GITHUB_TOKEN"])
          pr    = gh.get_repo(repo).get_pull(pr_no)

          # Gather each user’s latest review
          latest = {}
          for r in pr.get_reviews():
              u = r.user.login.lower()
              if u not in latest or r.submitted_at > latest[u].submitted_at:
                  latest[u] = r

          # Check: any review from exactly `want` with APPROVED state?
          for u, r in latest.items():
              if r.state == "APPROVED" and u == want:
                  print(f"✅ Approved by {want}.")
                  sys.exit(0)

          print(f"❌ Pull request must be approved by {want}.")
          sys.exit(1)
          PYCODE
