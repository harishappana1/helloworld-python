name: Enforce Single-User Approval

# Only trigger on pull_request_review events:
on:
  pull_request_review:
    types: [submitted]

jobs:
  require-harish-approval:
    # Only run when the review is from harishappana7 _and_ is APPROVED:
    if: >
      github.event.review.user.login == 'harishappana7' &&
      github.event.review.state == 'approved'

    runs-on: ubuntu-latest

    env:
      # your PAT stored as a repo secret
      GITHUB_TOKEN:    ${{ secrets.CINEWTOKEN }}
      # so your script can load the event JSON
      GITHUB_EVENT_PATH: ${{ github.event_path }}
      # just so you can double-check if you want
      GITHUB_REPOSITORY: ${{ github.repository }}

    steps:
      - uses: actions/checkout@v3

      - name: Install PyGithub
        run: python -m pip install --upgrade pip PyGithub

      - name: Confirm approval
        run: |
          python - << 'PYCODE'
          import os, sys, json
          from github import Github

          # load the PR number
          ev      = json.load(open(os.environ["GITHUB_EVENT_PATH"]))
          pr_num  = ev["pull_request"]["number"]
          repo_id = os.environ["GITHUB_REPOSITORY"]

          gh   = Github(os.environ["GITHUB_TOKEN"])
          pr   = gh.get_repo(repo_id).get_pull(pr_num)

          # just double-check that harishappana7 really did approve
          reviews = pr.get_reviews()
          latest = {}
          for r in reviews:
              u = r.user.login.lower()
              if u not in latest or r.submitted_at > latest[u].submitted_at:
                  latest[u] = r

          # lookup his final review
          harish = latest.get("harishappana7")
          if harish and harish.state == "APPROVED":
              print("✅ PR approved by harishappana7")
              sys.exit(0)

          print("❌ Unexpected: review event passed `if:` but no APPROVED found")
          sys.exit(1)
          PYCODE
